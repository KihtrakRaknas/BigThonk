{"version":3,"sources":["../node_modules/autotrack/lib/utilities.js","../node_modules/autotrack/lib/method-chain.js","../node_modules/autotrack/lib/constants.js","../node_modules/autotrack/lib/provide.js","../node_modules/autotrack/lib/usage.js","../node_modules/dom-utils/lib/matches.js","../node_modules/dom-utils/lib/parents.js","../node_modules/dom-utils/lib/closest.js","../node_modules/dom-utils/lib/delegate.js","../node_modules/dom-utils/lib/get-attributes.js","../node_modules/dom-utils/lib/parse-url.js"],"names":["createFieldsObj","defaultFields","userFields","tracker","undefined","hitFilter","target","event","originalBuildHitTask","get","buildHitTask","model","set","assign","getAttributeFields","element","prefix","attributes","getAttributes","attributeFields","Object","keys","forEach","attribute","indexOf","value","field","slice","length","replace","match","p1","toUpperCase","withTimeout","callback","wait","called","fn","setTimeout","queueMap","deferUntilPluginsLoaded","trackingId","ref","processQueue","clearTimeout","timeout","send","MethodChain","remove","queue","push","originalMethod","add","i","len","source","key","prototype","hasOwnProperty","call","capitalize","str","charAt","isObject","now","Date","uuid","b","a","Math","random","toString","instances","context","methodName","this","isTask","test","originalMethodReference","methodChain","boundMethodChain","wrappedMethod","lastBoundMethod","methodOverride","getOrCreateMethodChain","overrideMethod","rebindMethodChain","index","splice","destroy","method","previousMethod","bind","filter","h","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","provide","pluginName","pluginConstructor","gaAlias","window","GoogleAnalyticsObject","args","q","gaDevIds","gaplugins","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","trackUsage","plugin","trackVersion","pluginIndex","usageBin","toAdd","padZeros","hex","parseInt","substr","bin","trackPlugin","proto","Element","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","nodeType","item","selector","node","nodes","parentNode","querySelectorAll","parents","list","closest","shouldCheckSelf","parent","parentElements","concat","delegate","ancestor","eventType","opts","listener","delegateTarget","composed","composedPath","addEventListener","useCapture","removeEventListener","attrs","map","attr","name","DEFAULT_PORT","RegExp","document","createElement","cache","parseUrl","url","location","href","port","host","origin","protocol","pathname","hash","hostname","search"],"mappings":"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","file":"static/js/0.a5507501.chunk.js","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n"],"sourceRoot":""}