{"version":3,"sources":["firebase.js","Components/PostMini.js","Components/LoadingDiv.js","Screens/Home.js","Components/Comment.js","Screens/BlogPost.js","Screens/Feed.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PostMini","props","state","views","comments","database","ref","this","id","on","snapshot","snap","val","setState","Object","keys","length","className","img","src","alt","title","ReactHtmlParser","text","to","name","date","toLocaleDateString","React","Component","LoadingDiv","setTimeout","showText","type","color","height","width","Home","getPosts","fetch","then","res","json","postsJSON","miniPosts","posts","post","console","log","push","slug","excerpt","Date","post_thumbnail","URL","author","first_name","last_name","key","catch","encodeURIComponent","Comment","Math","random","getColor","style","borderRadius","borderWidth","borderColor","borderStyle","padding","margin","overflowWrap","paddingLeft","textDecoration","BlogPost","postId","commentInput","writing","class","placeholder","rows","onClick","postRef","document","getElementById","value","trim","alert","postKey","child","update","checkFirebase","transaction","commentsObj","get5Comments","commentsEl","i","commentID","floor","comment","JSON","parse","stringify","getPost","content","err","match","params","toLocaleTimeString","Feed","handleScroll","event","body","scrollHeight","window","innerHeight","scrollY","renderNewPost","splice","addEventListener","removeEventListener","App","basename","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0007bb4.chunk.js","sourcesContent":["import firebase from 'firebase/app'; \r\nimport 'firebase/database';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBHgeNNvgO_HbYJ6NWNnVs8Y8Xbg0Xealw\",\r\n    authDomain: \"big-thonk.firebaseapp.com\",\r\n    databaseURL: \"https://big-thonk.firebaseio.com\",\r\n    projectId: \"big-thonk\",\r\n    storageBucket: \"big-thonk.appspot.com\",\r\n    messagingSenderId: \"199147602141\",\r\n    appId: \"1:199147602141:web:e1a0ff1fdf473a66ab5b34\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React, {Fragment} from 'react'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\nexport default class PostMini extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const postRef = firebase.database().ref(this.props.id)\r\n        postRef.on('value',(snapshot)=>{\r\n            let snap = snapshot.val()\r\n            if(snap)\r\n                this.setState({views: snap.views?snap.views:0,comments: snap.comments?Object.keys(snap.comments).length:0})\r\n        })\r\n    }\r\n    state={\r\n        views:0,\r\n        comments:0\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"card\" >\r\n                    {this.props.img?<img className=\"card-img-top\" src={this.props.img} alt=\"Card image cap\"/>:null}\r\n                    <div className=\"card-body\" >\r\n                        <h3 className=\"card-title\">{this.props.title}</h3>\r\n                        <p className=\"card-text\">{ReactHtmlParser(this.props.text)}</p>\r\n                        <div className=\"btn-div\">\r\n                        <Link to={\"/\"+this.props.id}><a className=\"btn btn btn-outline-primary\">Click Here to Read More</a></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        { this.props.name +\" - \"+this.props.date.toLocaleDateString()+\" - 👀\"+this.state.views+\" 💬\"+this.state.comments}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nexport default class LoadingDiv extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        setTimeout(()=>this.setState({showText:true}),500)\r\n        this.state={showText:false}\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <br/><br/><br/><br/><br/><br/><br/>\r\n                {this.state.showText?<p className=\"display-4\">Geting the latest content!</p>:null}\r\n                <ReactLoading type=\"cubes\" color=\"#ffffff\" height={'20%'} width={'20%'} />\r\n            </div>\r\n        )\r\n    }\r\n  }","import React from 'react';\nimport PostMini from '../Components/PostMini';\nimport LoadingDiv from '../Components/LoadingDiv';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {};\n    this.getPosts();\n  }\n\n  render(){\n    return (\n      <div className=\"App container\">\n        <div id=\"Posts\" className=\"row\">\n          {this.state.miniPosts?this.state.miniPosts:<LoadingDiv></LoadingDiv>}\n        </div>\n      </div>\n    );\n  }\n\n  getPosts = ()=>{\n    fetch(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/\").then((res)=>res.json()).then((postsJSON)=>{\n      let miniPosts = [];\n      for(let post of postsJSON.posts){\n        console.log(post)\n        miniPosts.push(<PostMini id={post.slug} text={post.excerpt} date={new Date(post.date)} title={post.title} img={post.post_thumbnail?post.post_thumbnail.URL:null} name={post.author.first_name+\" \"+post.author.last_name} key={post.id}></PostMini>)\n      }\n      this.setState({miniPosts})\n    }).catch(()=>{\n      fetch('https://wordpress-redirect.herokuapp.com/?url='+encodeURIComponent(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/\")).then((res)=>res.json()).then((postsJSON)=>{\n        let miniPosts = [];\n        for(let post of postsJSON.posts){\n          console.log(post)\n          miniPosts.push(<PostMini id={post.slug} text={post.excerpt} date={new Date(post.date)} title={post.title} img={post.post_thumbnail?post.post_thumbnail.URL:null} name={post.author.first_name+\" \"+post.author.last_name} key={post.id}></PostMini>)\n        }\n        this.setState({miniPosts})\n      })\n    })\n  }\n}\n","import React, {Fragment} from 'react'\r\n\r\nexport default class Comment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    getColor(){ \r\n        return \"hsl(\" + 360 * Math.random() + ',' + (25 + 70 * Math.random()) + '%,' + (85 + 10 * Math.random()) + '%)'\r\n    }      \r\n\r\n    render(){\r\n        let color = this.getColor()\r\n        console.log(color)\r\n        return(\r\n            <div className=\"comment\" style={{borderRadius:\"5px\",borderWidth:\"2px\", borderColor:color, color:color, borderStyle:\"solid\", padding: \"5px\", margin:\"10px\", overflowWrap: \"break-word\"}}>\r\n                <h5 style={{paddingLeft:\"10px\", textDecoration:\"underline\"}}>{this.props.name}</h5>\r\n                <p>{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Fragment} from 'react'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport LoadingDiv from '../Components/LoadingDiv';\r\nimport Comment from '../Components/Comment';\r\nimport firebase from '../firebase.js'\r\n\r\nexport default class BlogPost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let postId;\r\n        if(this.props.post)\r\n            postId = this.props.post.slug\r\n        else\r\n            postId = this.props.match.params.postId\r\n        this.postId = postId;\r\n        this.getPost()\r\n    }\r\n    state={comments:[]}\r\n    render(){\r\n        let postId = this.props.match?this.props.match.params.postId:\"feed\"\r\n        if(postId==\"about\"||postId==\"authors\")\r\n            return  <div className=\"App container\">{ReactHtmlParser(this.state.content)}</div>\r\n        if(this.state.err)\r\n            return  <div className=\"App container\"><br/><br/><h1 className=\"text-center\">Couldn't find the post you are looking for</h1><h3 className=\"text-center\">Double check your link!</h3></div>\r\n        return(\r\n            <div className=\"App container blogpost\">\r\n                <br/>\r\n                    {!this.state.content?<LoadingDiv></LoadingDiv>:<div>\r\n                        <h1 className=\"text-center\">{this.state.title}</h1>\r\n                        <div className=\"d-flex justify-content-between author-box\"><p>{this.state.name?this.state.name:null}</p><p>{this.state.date?this.state.date.toLocaleDateString()+\"   \"+this.state.date.toLocaleTimeString():null}</p></div>\r\n                        <hr/>\r\n                        <br/>\r\n                        {ReactHtmlParser(this.state.content)}\r\n                        <br/>\r\n                        <hr/>\r\n                        <br/>\r\n                        <h2 className=\"text-center\">Comments:</h2><br/>{this.commentInput()}\r\n                        {this.state.comments.length>0?<div>{this.state.comments}{this.commentsObj&&Object.keys(this.commentsObj).length>0?<button className=\"btn btn btn-outline-info btn-block\" onClick={this.get5Comments}>Show more comments</button>:null}</div>:<p><em>No comments yet. You could be the first!</em></p>}\r\n                        <br/>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    commentInput = ()=>{\r\n        if(!this.state.writing)\r\n            return <div><button className=\"btn btn btn-outline-success btn-block\" onClick={()=>this.setState({writing:true})}>Create Comment</button><br/></div>\r\n        return(\r\n            <div>\r\n            <input class=\"form-control\" id=\"nameInput\" placeholder=\"Type your name here\"></input><br/>\r\n            <textarea className=\"form-control\" id=\"textInput\" rows=\"3\" placeholder=\"Type your comment here\"></textarea><br/>\r\n            <button className=\"btn btn btn-outline-success btn-block\" onClick={this.post}>Post</button><br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    post = () =>{\r\n        const postRef = firebase.database().ref(this.postId)\r\n        let name = document.getElementById(\"nameInput\").value\r\n        let text = document.getElementById(\"textInput\").value\r\n        if(name.trim()==\"\" || text.trim()==\"\")\r\n            alert(\"Please include a name and a comment before posting\");\r\n        else{\r\n            let postKey = postRef.child('comments').push().key\r\n            postRef.child('comments').update({[postKey]:{name,text}})\r\n            document.getElementById(\"textInput\").value = \"\"\r\n        }\r\n    }\r\n\r\n    checkFirebase = () =>{\r\n        console.log(\"post: \"+this.postId)\r\n        const postRef = firebase.database().ref(this.postId)\r\n        postRef.child('views').transaction(function(views) {\r\n            return (views || 0) + 1;\r\n        });\r\n        postRef.child('comments').on('value',(snapshot)=>{\r\n            this.commentsObj = snapshot.val();\r\n            if(this.state.comments.length==0)\r\n                this.get5Comments();\r\n        })  \r\n    }\r\n\r\n    get5Comments = () =>{\r\n        let commentsEl = [];\r\n        if(this.state.comments)\r\n            commentsEl = [...this.state.comments];\r\n        if(this.commentsObj)\r\n            for(var i = 0; i!=5; i++){\r\n                if(Object.keys(this.commentsObj).length==0)\r\n                    break;\r\n                let commentID = Object.keys(this.commentsObj)[Math.floor(Math.random()*Object.keys(this.commentsObj).length)]\r\n                let comment = JSON.parse(JSON.stringify(this.commentsObj[commentID]))\r\n                delete this.commentsObj[commentID];\r\n                commentsEl.push(<Comment name={comment.name?comment.name:\"No Name\"} text={comment.text?comment.text:\"No Text\"} key={JSON.stringify(comment)}></Comment>)\r\n            }\r\n        console.log(commentsEl.length)\r\n        this.setState({comments:commentsEl})\r\n    }\r\n\r\n    getPost = ()=>{\r\n        if(this.props.post){\r\n            let post = this.props.post;\r\n            console.log(post)\r\n            this.state = {name:post.author.first_name+\" \"+post.author.last_name,title:post.title,content:post.content, date:new Date(post.date), err:false, comments:[]}\r\n            this.checkFirebase();\r\n        }else{\r\n            console.log(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/slug:\"+this.postId)\r\n            fetch(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/slug:\"+this.postId).then((post)=>{\r\n                console.log(post)\r\n            this.setState({name:post.author.first_name+\" \"+post.author.last_name,title:post.title,content:post.content, date:new Date(post.date), err:false})\r\n            this.checkFirebase();\r\n            }).catch((err)=>{\r\n                console.log('https://wordpress-redirect.herokuapp.com/?url='+encodeURIComponent(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/slug:\"+this.postId))\r\n                fetch('https://wordpress-redirect.herokuapp.com/?url='+encodeURIComponent(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/slug:\"+this.postId)).then((res)=>res.json()).then((post)=>{\r\n                    console.log(post)\r\n                this.setState({name:post.author.first_name+\" \"+post.author.last_name,title:post.title,content:post.content, date:new Date(post.date), err:false})\r\n                this.checkFirebase();\r\n                }).catch((err)=>{\r\n                    this.setState({err:true})\r\n                })\r\n            })\r\n        }\r\n      }\r\n}","import React from 'react';\r\nimport PostMini from '../Components/PostMini';\r\nimport LoadingDiv from '../Components/LoadingDiv';\r\nimport BlogPost from './BlogPost.js'\r\n\r\nexport default class Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Don't call this.setState() here!\r\n    this.state = {};\r\n    this.getPosts();\r\n  }\r\n\r\n  handleScroll = (event) =>{\r\n    if(document.body.scrollHeight - window.innerHeight - window.scrollY <500)\r\n        this.renderNewPost();\r\n  }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App container\">\r\n        <div id=\"Posts\" className=\"row\">\r\n          {this.state.posts?this.state.posts:<LoadingDiv></LoadingDiv>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPosts = ()=>{\r\n    fetch(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/\").then((res)=>res.json()).then((postsJSON)=>{\r\n        this.postsJSON = postsJSON.posts\r\n        this.renderNewPost()\r\n    }).catch(()=>{\r\n      fetch('https://wordpress-redirect.herokuapp.com/?url='+encodeURIComponent(\"https://public-api.wordpress.com/rest/v1.1/sites/176343073/posts/\")).then((res)=>res.json()).then((postsJSON)=>{\r\n        this.postsJSON = postsJSON.posts\r\n        this.renderNewPost()\r\n      })\r\n    })\r\n  }\r\n\r\n  renderNewPost = () =>{\r\n        let posts = [];\r\n        if(this.state.posts)\r\n            posts = [...this.state.posts]\r\n        if(this.postsJSON.length>0){\r\n            posts.push(<BlogPost post={this.postsJSON[0]}></BlogPost>)\r\n            this.postsJSON.splice(0,1)\r\n            this.setState({posts})\r\n        }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Home from './Screens/Home'\r\nimport BlogPost from './Screens/BlogPost.js'\r\nimport './App.css';\r\nimport Feed from './Screens/Feed'\r\n\r\nexport default function App() {\r\n    return (\r\n      <Router basename=\"/clarity\">\r\n        <div>\r\n            <nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link to=\"/\" style={{color:\"white\"}}><a class=\"navbar-brand\">A Lack Of Clarity</a></Link>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item active\">\r\n                            <Link to=\"/\"><a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a></Link>\r\n                        </li>\r\n                        <li class=\"nav-item active\">\r\n                            <Link to=\"/feed\"><a class=\"nav-link\" href=\"#\">Feed</a></Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link to=\"/about\"><a class=\"nav-link\" href=\"#\">About</a></Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link to=\"/authors\"><a class=\"nav-link\" href=\"#\">Authors</a></Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route exact={true} path=\"/feed\" component = {Feed}/>\r\n            <Route path=\"/:postId\" component={BlogPost} />\r\n            <Route exact={true} path=\"/\" component = {Home}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}